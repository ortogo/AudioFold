class TelegramBot {

    def TelegramBot(token) {
        this.token = token
    }

    def setToken(token) {
        this.token = token
    }

    def getToken() {
        return token
    }

    def toParams (obj) {
        str = ""
        for k, v : obj
            str += k + "=" + v + "&"
        return str
    }

    def createFileUrl(filePath) {
        return "https://api.telegram.org/file/bot" + this.token + "/" + filePath
    }

    def getFile(fileId, callback) {
        return this.invokeJson("getFile", {"file_id":fileId}, callback)
    }

    def createRawUrl(method, params) {
        return "https://api.telegram.org/bot" + this.token + "/" + method + "?" + params + "access_token=" + this.token
    }

    def createUrl(method, params) {
        return this.createRawUrl(method, this.toParams(params))
    }

    def invokeJson(method, params, callback) {
        return http(this.createUrl(method, params), combine(::jsondecode, callback))
    }

    def invoke(method, params, callback) {
        return http(this.createUrl(method, params), callback)
    }

    def sendMessage(text = "", chatId = 1) {
        return this.invoke("sendMessage", {
            "chat_id": chatId,
            "text": text
        }, ::echo)
    }

    def getUpdates(offset, callback) {
        return this.invokeJson("getUpdates", {"offset": offset}, callback)
    }
}

